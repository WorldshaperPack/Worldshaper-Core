plugins {
    id 'idea'
    id "maven-publish"
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://maven.shedaniel.me/" }
    maven { url = "https://maven.architectury.dev" }
    maven { url = "https://maven.kyrptonaught.dev" }
    maven { url = 'https://maven.gtceu.com'; content { includeGroup 'com.gregtechceu.gtceu' } }
    maven { url "https://maven.firstdarkdev.xyz/snapshots/" }
    maven { url = "https://maven.saps.dev/minecraft"; content { includeGroup "dev.latvian.mods" } }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url "https://cursemaven.com/"; content { includeGroup "curse.maven" } }
    maven { url = "https://minecraft.curseforge.com/api/maven/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.resourcefulbees.com/repository/maven-public/" }
    maven { url 'https://maven.azuredoom.com/mods' }
    maven { url "https://maven.createmod.net" }
}

version = mod_version
group = maven_group
base { archivesName = archives_base_name }
java { sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17 }
sourceSets.main.resources { srcDir 'src/generated/resources' }

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods { "${mod_id}" { source sourceSets.main } }
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
        }
        client { property 'forge.enabledGameTestNamespaces', mod_id }
        server { property 'forge.enabledGameTestNamespaces', mod_id; args '--nogui' }
        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
    runtimeOnly fg.deobf("dev.emi:emi-forge:${emi_version}+${minecraft_version}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:5390389")

    // gregtech
    implementation fg.deobf("com.gregtechceu.gtceu:gtceu-${minecraft_version}:${gtceu_version}:slim") { transitive = false }
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-${minecraft_version}:${ldlib_version}") { transitive = false }
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    runtimeOnly fg.deobf("dev.toma.configuration:configuration-forge-${minecraft_version}:${configuration_version}")
    runtimeOnly fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

    // Customportalapi
    implementation fg.deobf("net.kyrptonaught.customportalapi:customportalapi-reforged1201:1.0.4")

    // create
    implementation fg.deobf("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("dev.engine-room.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}")
    implementation fg.deobf("net.createmod.ponder:Ponder-Forge-${minecraft_version}:${ponder_version}")

    // ws mods
    implementation fg.deobf("curse.maven:create-powerlines-1076056:6274258")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")
    runtimeOnly fg.deobf("com.teamresourceful.resourcefullib:resourcefullib-forge-${minecraft_version}:2.1.29")
    runtimeOnly fg.deobf("com.teamresourceful.resourcefulconfig:resourcefulconfig-forge-${minecraft_version}:2.1.2")
    runtimeOnly fg.deobf("earth.terrarium.botarium:botarium-forge-${minecraft_version}:2.3.4")
    runtimeOnly fg.deobf("curse.maven:citadel-331936:5633260")
    runtimeOnly fg.deobf("curse.maven:alexs-caves-924854:5848216")


    // disable for datagen
    runtimeOnly fg.deobf("earth.terrarium.adastra:ad_astra-forge-${minecraft_version}:1.15.20")
    runtimeOnly fg.deobf("curse.maven:dimensionaldoors-284876:5617415")
}

tasks.named('processResources', ProcessResources).configure {
    var properties = ["mod_license"      : mod_license,
                      "mod_id"           : mod_id,
                      "version"          : mod_version,
                      "mod_name"         : mod_name,
                      "mod_url"          : mod_url,
                      "mod_author"       : mod_author,
                      "forge_version"    : forge_version.split("\\.")[0], // only specify major version of forge
                      "minecraft_version": minecraft_version,
                      "gtceu_version"    : gtceu_version,]
    inputs.properties(properties)
    filesMatching("META-INF/mods.toml") { expand properties + [project: project] }
}

tasks.named('jar', Jar).configure { finalizedBy 'reobfJar' }
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(17)
}
